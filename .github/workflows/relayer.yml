name: relayer

on: 
  workflow_dispatch:
    inputs:
      deploy_guardian:
        # Friendly description to be shown in the UI instead of 'name'
        description: "Deploy guardiand"
        # Default value if no value is explicitly provided
        default: false
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: boolean
#   push:
#     branches:
#       - main

env:
  ENVIRONMENT: ${{ vars.ENVIRONMENT }}
  REDIS_HOST: ${{ vars.REDIS_HOST }}
  REDIS_PORT: ${{ vars.REDIS_PORT }}
  REDIS_CURRENT_LOCATION_ID: ${{ vars.REDIS_CURRENT_LOCATION_ID }}
  PROVIDERS_CHAIN_10002: ${{ vars.PROVIDERS_CHAIN_10002 }}
  HUB_RELAY_CHAIN_ID: ${{ vars.HUB_RELAY_CHAIN_ID }}
  HUB_RELAY_CHAIN_ADDRESS: ${{ vars.HUB_RELAY_CHAIN_ADDRESS }}
  SPOKE_RELAY_CHAIN_5: ${{ vars.SPOKE_RELAY_CHAIN_5 }}
  #comma-separated values
  PRIVATE_KEYS_CHAIN_10002: ${{ secrets.PRIVATE_KEYS_CHAIN_10002 }}
  PRIVATE_KEYS_CHAIN_5: ${{ secrets.PRIVATE_KEYS_CHAIN_5 }}
  # GITHUB_REPOSITORY: ${{ github.repository }}
  HUMAN_RELAYER_SERVICE: ${{ vars.HUMAN_RELAYER_SERVICE }}
  GUARDIAN_NETWORK: ${{ vars.GUARDIAN_NETWORK }}
  GUARDIAN_BOOTSTRAP: ${{ vars.GUARDIAN_BOOTSTRAP }}
  PROVIDERS_CHAIN_5: ${{ vars.PROVIDERS_CHAIN_5 }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ vars.GCP_REGION }}


jobs:
  # check if files changed in relayer dir
  # relayer-filter:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     relayer-filter: ${{ steps.relayer-filter.outputs.relayer }}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: dorny/paths-filter@v2
  #       id: relayer-filter
  #       with:
  #         filters:
  #           relayer:
  #             - './relayer/**'
  #     # run only if 'relayer' files were changed
  #     - name: workflow tests
  #       if: steps.relayer-filter.outputs.relayer-filter == 'true'
  #       run: echo "Workflow file"

  #     # run only if not 'relayer' files were changed
  #     - name: not workflow tests
  #       if: steps.relayer-filter.outputs.relayer-filter != 'true'
  #       run: echo "NOT relayer file"

  # build-image:
  #   # needs: [relayer-filter]
  #   # if: needs.relayer-filter.outputs.relayer-filter == 'true'
  #   strategy:
  #     fail-fast: true

  #   name: Build image
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: recursive
  #     - name: Build and publish a Docker image for ${{ github.repository }}
  #       uses: macbre/push-to-ghcr@v12
  #       with:
  #         image_name: ${{ github.repository }}
  #         github_token: ${{ secrets.RELAYER_GITHUB_TOKEN }}
  #         context: ./relayer/
  #         dockerfile: ./relayer/Dockerfile.human-relayer-app

  deploy-image:
    # needs: [build-image]
    strategy:
      fail-fast: true
    permissions:
      contents: 'read'
      id-token: 'write'
      
    name: Prepare metadata and deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup metadata – guardiand
        if: inputs.deploy_guardian == true
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: .github/files/gcp-metadata-guardiand.yml
          output_file: gcp-metadata-guardiand.yml
          strict: true

      - name: Setup metadata – relayer
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: .github/files/gcp-metadata-relayer.yml
          output_file: gcp-metadata-relayer.yml
          strict: true

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }} # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }} # e.g. - my-service-account@my-project.iam.gserviceaccount.com

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          project_id: '${{ secrets.GCP_PROJECT_ID }}'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug

      - name: Authenticate docker
        run: |
          gcloud auth configure-docker --quiet ${{ vars.GCP_REGION }}-docker.pkg.dev    

      - name: Push image to Google Artifacts – guardian
        if: inputs.deploy_guardian == true
        run: |
          docker buildx imagetools create \
            --tag ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/blockydevs/guardiand \
            ghcr.io/wormhole-foundation/guardiand:latest

      - name: Deploy to Cloud Run – guardiand
        if: inputs.deploy_guardian == true
        id: deploy-guardiand
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          region: ${{ vars.GCP_REGION }}
          metadata: gcp-metadata-guardiand.yml

      # If required, use the Cloud Run url output in later steps
      - name: Show Output – guardiand
        if: inputs.deploy_guardian == true
        run: echo ${{ steps.deploy-guardiand.outputs.url }}

      - name: Build the image – relayer
        id: build-image
        uses: docker/build-push-action@v3
        with:
          context: relayer
          file: relayer/Dockerfile.human-relayer-app
          push: false
          tags: "${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/blockydevs/relayer-app"
          labels: "${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/blockydevs/relayer-app"
          cache-from: type=gha
          cache-to: type=gha,mode=max    
      - name: Build and push the image – relayer
        id: build-push-image
        uses: docker/build-push-action@v3
        with:
          context: relayer
          file: relayer/Dockerfile.human-relayer-app
          push: true
          tags: "${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/blockydevs/relayer-app"
          labels: "${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/blockydevs/relayer-app"
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # - name: Build and push relayer
      #   working-directory: relayer
      #   run: |
      #     docker build -t "${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/blockydevs/relayer-app:${{ github.sha }}" -f Dockerfile.human-relayer-app .
      #     docker push "${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/blockydevs/relayer-app:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy-relayer
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          region: ${{ vars.GCP_REGION }}
          metadata: gcp-metadata-relayer.yml

      # If required, use the Cloud Run url output in later steps
      - name: Show Output – relayer
        run: echo ${{ steps.deploy-relayer.outputs.url }}