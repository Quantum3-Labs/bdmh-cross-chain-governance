name: smartcontracts

on: 
  workflow_dispatch:
  # Inputs the workflow accepts.
    inputs:
      CHAIN:
        description: 'Chain ID'
        required: true
        type: number
      HM_TOKEN_ADDRESS:
        # description: 'HM Token Address'
        required: true
        type: string
      TIMELOCK:
        description: "Use timelock"
        required: true
        type: boolean
        default: false
      ADDRESS_TO_FUND:
        required: false
        type: string
      DESCRIPTION:
        required: true
        type: string
        default: "# Test proposal 4"
        description: "Proposal description"

defaults:
  run:
    working-directory: smartcontracts

env:
  FOUNDRY_PROFILE: ci
  # user data
  PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
  SECOND_PRIVATE_KEY: ${{ secrets.SECOND_PRIVATE_KEY }}
  THIRD_PRIVATE_KEY: ${{ secrets.THIRD_PRIVATE_KEY }}
  SEPOLIA_RPC_URL: ${{ vars.SEPOLIA_RPC_URL }}
  HUB_VOTE_TOKEN_ADDRESS: ${{ vars.HUB_VOTE_TOKEN_ADDRESS }}
  POLYGON_MUMBAI_RPC_URL: ${{ vars.POLYGON_MUMBAI_RPC_URL }}
  MUMBAI_ETHERSCAN_API_KEY: ${{ secrets.MUMBAI_ETHERSCAN_API_KEY }}
  ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
  MAGISTRATE_ADDRESS: ${{ secrets.MAGISTRATE_ADDRESS }}
  # hub 
  HUB_CORE_BRIDGE_ADDRESS: ${{ vars.HUB_CORE_BRIDGE_ADDRESS }}
  HUB_CHAIN_ID: ${{ vars.HUB_CHAIN_ID }}
  VOTE_TOKEN_ADDRESS: ${{ vars.VOTE_TOKEN_ADDRESS }}
  # spoke deployment
  SPOKE_CORE_BRIDGE_ADDRESS: ${{ vars.SPOKE_CORE_BRIDGE_ADDRESS }}
  SPOKE_CHAIN_ID: ${{ vars.SPOKE_CHAIN_ID }}
  SPOKE_VOTE_TOKEN_ADDRESS: ${{ vars.SPOKE_VOTE_TOKEN_ADDRESS }}
  # from inputs
  HM_TOKEN_ADDRESS: ${{ inputs.HM_TOKEN_ADDRESS }}
  ADDRESS_TO_FUND: ${{ inputs.ADDRESS_TO_FUND }}
  CHAIN: ${{ inputs.CHAIN }}
  TIMELOCK: ${{ inputs.TIMELOCK }}
  DESCRIPTION: ${{ inputs.DESCRIPTION }}


jobs:
  check:
    strategy:
      fail-fast: true

    name: Foundry project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Deploy contracts
        run: ./deploy.sh

      # store output jsons as artifact, for download see https://docs.github.com/en/rest/actions/artifacts?apiVersion=2022-11-28#download-an-artifact
      - uses: actions/upload-artifact@v3
        with:
          name: run-latest
          path: |
            broadcast/SpokeDeployment.s.sol/
            broadcast/HubDeployment.s.sol/

